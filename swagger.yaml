swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error 



#------------------------------------- Transactions
  /user/accounts/{id}:
    get:
      security: 
        - Bearer: []
      tags:
        - User Module
      summary: Get account
      description: API for getting a user's account
      parameters :
      - in: path
        name: id
        description: Account Id
        required: true
        type : string
      responses:
        "200":
          description: User account retrieved successully
          schema:
            $ref: "#/definitions/AccountResponse"
        "400":
          description: Invalid Request
        "404":
          description: Account not found
        "500":
          description: Internal Server Error

  /user/{id}/transactions/current:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get transaction for current month
      description: API for getting all transactions for the current month, grouped by account
      parameters:
        - in: path
          name: id
          description: User Id
          required: true
          type: string
      responses:
        "200":
          description: User transactions retrieved successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "404":
          description: User not found
        "500":
          description: Internal Server Error

  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get Infos Transaction
      description: API for getting a user's transaction informations
      parameters:
        - in: path
          name: accountId
          description: User account id
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction id
          required: true
          type: string
      responses:
        "200":
          description: User Transaction information retrieved successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Edit Infos Transaction
      description: API for updating a user's transaction informations
      parameters:
        - in: path
          name: accountId
          description: User account id
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction id
          required: true
          type: string
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        "200":
          description: User Transaction information uptaded successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    post :
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Add Infos Transaction
      description: API for creating a user's transaction informations
      parameters:
        - in: path
          name: accountId
          description: User account id
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction id
          required: true
          type: string
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        "200":
          description: User Transaction information uptaded successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete Infos Transaction
      description: API for deleting a user's transaction informations
      parameters:
        - in: path
          name: accountId
          description: User account id
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction id
          required: true
          type: string
      responses:
        "200":
          description: User Transaction information deleted successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
#----------------------------------------------------------------------------


      
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  Transaction:
    properties:
      transaction:
        type: string
      category:
        type: string
      note:
        type: string   
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  AccountResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          value:
            type: string
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          id: 
            type: string
          date:
            type: string
          description:
            type: string
          amount: 
            type: string
          balance:
            type: string
          transaction:
            type: string
          category:
            type: string
          note: 
            type: string